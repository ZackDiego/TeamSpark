name: Deploy to EC2

on:
  push:
    branches:
      - dev
      - sprint3
      - sprint4
      - sprint5

jobs:
  deploy:
    name: Deploy to EC2 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      # - name: Install Java
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '11' # or choose the appropriate Java version

      - name: Transfer files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: '.'
          target: '/home/ubuntu/app' 

      - name: SSH into EC2 and deploy
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SCRIPT_AFTER: |
            cd /home/ubuntu/app/TeamSpark/teamSpark
            sudo systemctl stop app
            mvn clean package -Dmaven.test.skip=true
            sudo systemctl start app # Start the service

      - name: Transfer files to EC2 on second server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST_SECOND }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: '.'
          target: '/home/ubuntu/app' 

      - name: SSH into EC2 and deploy on second server
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.EC2_HOST_SECOND }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SCRIPT_AFTER: |
            cd /home/ubuntu/app/TeamSpark/teamSpark
            sudo systemctl stop app
            mvn clean package -Dmaven.test.skip=true
            sudo systemctl start app # Start the service
